<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="MAIN" Id="{c137dca6-2078-4081-8260-8d6099001278}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR
	s_ParamPathnames	: ARRAY[1..Param_Project.n_MaxParamFolders] OF STRING := ['C:\Cleanroom_Connect\Parameters'];//, 'C:\Cleanroom_Connect\Param\DockingInterface'];
	
	User : STRING := '<user_name>';
	SoftwareVersion : STRING := '<software_version>';
	InitDone : BOOL;
	Shutdown : BOOL;
	
	fTestValue : LREAL;
	
	stMsgBox : ST_MsgBox;
	
	fbModeStateControl : FB_ModeStateControl;
	
	s_arrBool : ARRAY[0..15] OF BOOL;
	s_cmTubeLedRgb : CM_TubeLedRgb;
	itf_LED_RGB : I_LedRgb;
	
	cmDoorLock : CM_DoorLock;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[GVL_KMWEGenericLib.g_fbAlarmManager();

GVL_KMWEGenericLib.g_fbParamManager.p_bShowHmiParam := TRUE;

GVL_KMWEGenericLib.g_fbParamManager(
	i_sPathName := s_ParamPathnames, 
	i_osrResetImportExport := GVL_KMWEGenericLib.g_fbAlarmManager.p_osrReset);

fbModeStateControl();
	
GVL.g_unCleanroomConnect.p_bCmdReset := GVL_KMWEGenericLib.g_fbAlarmManager.p_osrReset;
GVL.g_unCleanroomConnect();

//TEST
itf_LED_RGB := GVL_Modules.g_emUtilities.i_ref_itf_LED_RGB;

//++itf_LED_RGB := s_cmTubeLedRgb;

//s_cmTubeLedRgb();

IF itf_LED_RGB <> 0 THEN
 
	IF s_arrBool[0] THEN itf_LED_RGB.m_Off(s_arrBool[11]); s_arrBool[0] := FALSE; END_IF
	IF s_arrBool[1] THEN itf_LED_RGB.m_Red(s_arrBool[11]); s_arrBool[1] := FALSE; END_IF
	IF s_arrBool[2] THEN itf_LED_RGB.m_Green(s_arrBool[11]); s_arrBool[2] := FALSE; END_IF
	IF s_arrBool[3] THEN itf_LED_RGB.m_Blue(s_arrBool[11]); s_arrBool[3] := FALSE; END_IF
	IF s_arrBool[4] THEN itf_LED_RGB.m_Yellow(s_arrBool[11]); s_arrBool[4] := FALSE; END_IF
	IF s_arrBool[5] THEN itf_LED_RGB.m_Magenta(s_arrBool[11]); s_arrBool[5] := FALSE; END_IF
	IF s_arrBool[6] THEN itf_LED_RGB.m_Cyan(s_arrBool[11]); s_arrBool[6] := FALSE; END_IF
	IF s_arrBool[7] THEN itf_LED_RGB.m_White(s_arrBool[11]); s_arrBool[7] := FALSE; END_IF

END_IF

IF s_arrBool[14] THEN cmDoorLock.m_Lock(); s_arrBool[14] := FALSE; END_IF
IF s_arrBool[15] THEN cmDoorLock.m_Unlock(); s_arrBool[15] := FALSE; END_IF

cmDoorLock(
	i_bReqEnable:= , 
	i_eCtrlMode:= , 
	i_bCmdReset:= , 
	i_sCmName:= , 
	i_stSettings:= , 
	i_bAllowUnlock:= );


 ]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>