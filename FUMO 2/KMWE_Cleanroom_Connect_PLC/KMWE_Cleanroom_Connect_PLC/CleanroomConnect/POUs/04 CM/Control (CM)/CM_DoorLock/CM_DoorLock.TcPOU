<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="CM_DoorLock" Id="{ea68c333-cb10-44e9-998f-ee97a6acb23c}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK CM_DoorLock EXTENDS CM_Base //--IMPLEMENTS I_Door
VAR_INPUT
	i_stSettings : ST_SettingsDoorLock;
	i_bAllowUnlock : BOOL; //TRUE = Allowed to unlock
END_VAR

VAR
	// Inputs
	I_bPbReqToggleLock AT %I* : BOOL; //Request toggle lock
	I_bStaDoorIsClosed AT %I* : BOOL; //Door is closed
	I_bStaDoorIsOpened AT %I* : BOOL; //Door is opened
	
	// Outputs
	Q_bCmdLock AT %Q* : BOOL; //TRUE = Lock
	Q_bSnReqStatus AT %Q* : BOOL; //FASLE = Locked, Blink = pending, TRUE = Unlocked
			
	// Requests
	s_bReqActivateLock : BOOL; //external request
	s_bReqActivateUnlock : BOOL; //external request
	s_bReqPrepUnlock : BOOL;
	
	// Commands
	s_bCmdActivateLock : BOOL;
	s_bCmdLockStatus : BOOL;
	
	//----------------------Properties---------------------------//
	// States
	s_bStaWarning : BOOL;
	
	s_bStaLockIsActivated : BOOL;
	s_bStaDoorIsClosed : BOOL;
	s_bStaDoorIsOpened : BOOL;
	s_bStaReqToggleLock : BOOL;
	s_bOsrReqToggleLock : BOOL;
	
	// Timers
	s_tonUnlockRequestTimeout : TON;
	s_fbFlash : FB_Flash;
	
	// Alarms
	s_fbAlmHdlrDoorStatusUnknown : FB_AlarmHandler;
	s_fbAlmHdlrReqUnlockTimeout : FB_AlarmHandler;
	s_fbAlmHdlrDoorNotClosed : FB_AlarmHandler;
	
	s_wrnDoorStatusUnknown : BOOL;
	s_wrnReqUnlockTimeout : BOOL;
	s_wrnDoorNotClosed : BOOL;
		
	s_fbR_TrigReqToggleLock : R_TRIG; 
	
	//Sequence
	s_eSequence : E_SeqDoorLock;
	
	//Hmi
	s_stHmiData : ST_DoorLock_HMI;
	s_bHmiInit : BOOL := FALSE;
	
	s_fbHmiLedRequestButton : FB_HmiLed;
	s_fbHmiLedRequestStatus : FB_HmiLed;
	s_fbHmiLedLockIsActivated : FB_HmiLed;
	s_fbHmiLedDoorIsClosed : FB_HmiLed;
	s_fbHmiLedDoorIsOpened : FB_HmiLed;
	
	s_sDoorLockStateMachine : STRING;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
SUPER^();
]]></ST>
    </Implementation>
    <Folder Name="Methods" Id="{f1e13262-5093-4e19-b253-1c3417c042de}">
      <Folder Name="Base" Id="{af1e85c0-dcdd-4188-af02-8c4e811170d0}" />
    </Folder>
    <Folder Name="Properties" Id="{1cd224f2-8e0f-4515-bca2-e2383476522d}" />
    <Method Name="_m_Alarms" Id="{9c548875-33a6-42e4-a316-602892fa3d9c}" FolderPath="Methods\Base\">
      <Declaration><![CDATA[METHOD PROTECTED _m_Alarms : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
IF NOT SUPER^._m_Alarms() THEN
	RETURN;
END_IF

// Timeout (timers)
s_tonUnlockRequestTimeout(
	IN := i_bReqEnable AND (s_eSequence = E_SeqDoorLock.REQUEST_PENDING),
	PT := i_stSettings.tUnlockingRequestTimeout);

// Wrtie error bits
s_wrnReqUnlockTimeout := (s_tonUnlockRequestTimeout.Q);	
s_wrnDoorStatusUnknown := NOT(s_bStaDoorIsClosed) AND NOT(s_bStaDoorIsOpened);
	
// Alarm Handlers
s_fbAlmHdlrDoorStatusUnknown(
	i_bStaActive := s_wrnDoorStatusUnknown);
	
s_fbAlmHdlrReqUnlockTimeout(
	i_bStaActive := s_wrnReqUnlockTimeout);
	
s_fbAlmHdlrDoorNotClosed(
	i_bStaActive := s_wrnDoorNotClosed);
	
IF i_bCmdReset OR s_bStaDoorIsClosed THEN
	s_wrnDoorNotClosed := FALSE;
END_IF	
	
// Alarm collector
s_bStaError :=
	FALSE;

s_bStaWarning := 
	s_fbAlmHdlrDoorStatusUnknown.q_bStaActive
	OR s_fbAlmHdlrReqUnlockTimeout.q_bStaActive
	OR s_fbAlmHdlrDoorNotClosed.q_bStaActive;

_m_Alarms := TRUE;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="_m_Devices" Id="{610e92a2-55de-4c20-9dc9-5d6693ddaa6b}" FolderPath="Methods\Base\">
      <Declaration><![CDATA[METHOD PROTECTED _m_Devices : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
IF NOT SUPER^._m_Devices() THEN
	RETURN;
END_IF

//Generate flash pulse
s_fbFlash(i_bExcecute := TRUE, t_tOnTime := T#500MS, t_tOffTime := T#500MS);

s_fbR_TrigReqToggleLock(CLK := s_bStaReqToggleLock);
s_bOsrReqToggleLock := s_fbR_TrigReqToggleLock.Q;

CASE s_eSequence OF
	E_SeqDoorLock.INIT:
		;//No actions
	
		IF s_bStaDoorIsClosed THEN
			IF i_stSettings.bAutoLockAtInit THEN
				s_eSequence := E_SeqDoorLock.LOCKED;
			ELSE
				s_bCmdActivateLock := FALSE;
				s_bCmdLockStatus := TRUE; //Unlocked
				s_bReqPrepUnlock := FALSE;
				
				s_eSequence := E_SeqDoorLock.DOOR_CLOSED;	
			END_IF
			
		ELSIF s_bStaDoorIsOpened THEN
			s_eSequence := E_SeqDoorLock.DOOR_OPENED;	
		ELSE
			;//nothing (warning will be generated)
		END_IF
	
	E_SeqDoorLock.LOCKED:
		s_bCmdActivateLock := TRUE;
		s_bCmdLockStatus := FALSE; //Locked
		s_bReqPrepUnlock := FALSE;
	
		IF s_bOsrReqToggleLock OR s_bReqActivateUnlock THEN
			s_eSequence := E_SeqDoorLock.REQUEST_PENDING;
		END_IF
	
	E_SeqDoorLock.REQUEST_PENDING:
		s_bCmdActivateLock := TRUE;
		s_bCmdLockStatus := s_fbFlash.o_bQ; //Pending...
		s_bReqPrepUnlock := TRUE;
		
		IF i_bAllowUnlock THEN
			s_eSequence := E_SeqDoorLock.UNLOCKED;
		ELSIF s_bOsrReqToggleLock OR s_bReqActivateLock THEN
			s_eSequence := E_SeqDoorLock.LOCKED;
		END_IF

	E_SeqDoorLock.UNLOCKED:
		s_bCmdActivateLock := FALSE;
		s_bCmdLockStatus := TRUE; //Unlocked
		s_bReqPrepUnlock := FALSE;
	
		s_eSequence := E_SeqDoorLock.DOOR_CLOSED;
		
	E_SeqDoorLock.DOOR_CLOSED:
		;//No actions
	
		IF s_bStaDoorIsOpened THEN
			s_eSequence := E_SeqDoorLock.DOOR_OPENED;
		ELSIF s_bOsrReqToggleLock OR s_bReqActivateLock THEN
			s_eSequence := E_SeqDoorLock.LOCKED;
		END_IF

	E_SeqDoorLock.DOOR_OPENED:
		;//No actions

		IF s_bStaDoorIsClosed THEN
			s_eSequence := E_SeqDoorLock.DOOR_CLOSED;
		END_IF

	E_SeqDoorLock.ERROR:
		;//No actions
		
		IF i_bCmdReset THEN
			s_eSequence := E_SeqDoorLock.INIT;
		END_IF
		
ELSE
	s_eSequence := E_SeqDoorLock.INIT;
END_CASE

//Reset all request
s_bReqActivateLock := FALSE;
s_bReqActivateUnlock := FALSE;

_m_Devices := TRUE;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="_m_Hmi" Id="{099a1203-e422-4fa7-896f-2cb9acc72e21}" FolderPath="Methods\Base\">
      <Declaration><![CDATA[METHOD PROTECTED _m_Hmi : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
IF NOT SUPER^._m_Hmi() THEN
	RETURN;
END_IF

//To Hmi
IF NOT(s_bHmiInit) THEN
	//General names
	s_stHmiData.sDescription := i_sCmName;
	
	//Button names
	//<none>

	s_bHmiInit := TRUE;
END_IF

s_stHmiData.sState := s_sDoorLockStateMachine;

s_stHmiData.bStaRequestButton := s_fbHmiLedRequestButton.p_bStaLed;
s_stHmiData.bStaRequestStatus := s_fbHmiLedRequestStatus.p_bStaLed;
s_stHmiData.bStaLockIsActivated := s_fbHmiLedLockIsActivated.p_bStaLed;
s_stHmiData.bStaDoorIsClosed := s_fbHmiLedDoorIsClosed.p_bStaLed;
s_stHmiData.bStaDoorIsOpened := s_fbHmiLedDoorIsOpened.p_bStaLed;
	
//From Hmi
//<none>

//Led
s_fbHmiLedRequestButton(i_bStaLed := s_bStaReqToggleLock);
s_fbHmiLedRequestStatus(i_bStaLed := s_bCmdLockStatus);
s_fbHmiLedLockIsActivated(i_bStaLed := s_bStaLockIsActivated);
s_fbHmiLedDoorIsOpened(i_bStaLed := s_bStaDoorIsOpened);
s_fbHmiLedDoorIsClosed(i_bStaLed := s_bStaDoorIsClosed);

//Set visible is set one in _m_Init()

//State Machine
s_sDoorLockStateMachine := TO_STRING(s_eSequence);

_m_Hmi := TRUE;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="_m_Init" Id="{7e974ef6-a453-4752-8fef-bd0c78d3fc41}" FolderPath="Methods\Base\">
      <Declaration><![CDATA[METHOD PROTECTED _m_Init : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
IF NOT SUPER^._m_Init() THEN
	RETURN;
END_IF

//Alarm config
s_fbAlmHdlrDoorStatusUnknown.i_eAlarmLevel := E_AlarmLevel.Warning;
s_fbAlmHdlrDoorStatusUnknown.i_sAlarmText := CONCAT(i_sCmName , ': Door Status Unknown');

s_fbAlmHdlrReqUnlockTimeout.i_eAlarmLevel := E_AlarmLevel.Warning;
s_fbAlmHdlrReqUnlockTimeout.i_sAlarmText := CONCAT(i_sCmName , ': Request Unlock Timeout');

s_fbAlmHdlrDoorNotClosed.i_eAlarmLevel := E_AlarmLevel.Warning;
s_fbAlmHdlrDoorNotClosed.i_sAlarmText := CONCAT(i_sCmName , ': Door Not Closed');

//Hmi
s_fbHmiLedRequestButton.p_bStaVisible := TRUE;
s_fbHmiLedRequestButton.p_sToHmiDescriptionLed := 'Request Button Is Pressed';

s_fbHmiLedRequestStatus.p_bStaVisible := TRUE;
s_fbHmiLedRequestStatus.p_sToHmiDescriptionLed := 'Request Lamp Status';

s_fbHmiLedLockIsActivated.p_bStaVisible := TRUE;
s_fbHmiLedLockIsActivated.p_sToHmiDescriptionLed := 'Lock Is Activated';

s_fbHmiLedDoorIsClosed.p_bStaVisible := TRUE;
s_fbHmiLedDoorIsClosed.p_sToHmiDescriptionLed := 'Door Is Closed';

s_fbHmiLedDoorIsOpened.p_bStaVisible := TRUE;
s_fbHmiLedDoorIsOpened.p_sToHmiDescriptionLed := 'Door Is Opened';

s_sDoorLockStateMachine := 'Init';

_m_Init := TRUE;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="_m_Inputs" Id="{0f80ea41-d213-4e61-bf55-0e2eaf7e039c}" FolderPath="Methods\Base\">
      <Declaration><![CDATA[METHOD PROTECTED _m_Inputs : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
IF NOT SUPER^._m_Inputs() THEN
	RETURN;
END_IF

s_bStaReqToggleLock := I_bPbReqToggleLock;
s_bStaLockIsActivated := Q_bCmdLock;
s_bStaDoorIsClosed := I_bStaDoorIsClosed;
s_bStaDoorIsOpened := I_bStaDoorIsOpened;

_m_Inputs := TRUE;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="_m_Outputs" Id="{505e11af-7bdd-44b3-8506-0a1a26a8e0b6}" FolderPath="Methods\Base\">
      <Declaration><![CDATA[METHOD PROTECTED _m_Outputs : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
IF NOT SUPER^._m_Outputs() THEN
	RETURN;
END_IF

Q_bCmdLock := s_bCmdActivateLock; 
Q_bSnReqStatus := s_bCmdLockStatus;

_m_Outputs := TRUE;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="m_Lock" Id="{1802c1c5-3d52-4491-b19a-2db94b292512}" FolderPath="Methods\">
      <Declaration><![CDATA[// Request to Lock
METHOD PUBLIC m_Lock : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
IF NOT i_bReqEnable THEN 
	RETURN;
END_IF

IF (s_eSequence = E_SeqDoorLock.DOOR_CLOSED)
	OR (s_eSequence = E_SeqDoorLock.REQUEST_PENDING) //Return to LOCKED if pending is cancled 
THEN
	s_bReqActivateLock := TRUE;
ELSE
	s_wrnDoorNotClosed := TRUE;
END_IF
	
m_Lock := TRUE;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="m_Unlock" Id="{4b2987be-5b37-448a-ae60-0d85428f41cd}" FolderPath="Methods\">
      <Declaration><![CDATA[// Request to Unlock
METHOD PUBLIC m_Unlock : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
IF NOT i_bReqEnable THEN 
	RETURN;
END_IF

s_bReqActivateUnlock := TRUE;

m_Unlock := TRUE;
]]></ST>
      </Implementation>
    </Method>
    <Property Name="p_bReqPrepUnlock" Id="{fd14c4ab-e220-4286-8735-4fa941445d48}" FolderPath="Properties\">
      <Declaration><![CDATA[//Send request to higher-layer EM to prepare for unlocking
{attribute 'monitoring':='call'}
PROPERTY PUBLIC p_bReqPrepUnlock : BOOL]]></Declaration>
      <Get Name="Get" Id="{fe92706e-7336-4240-95e1-8213cfae1daf}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[
p_bReqPrepUnlock := s_bReqPrepUnlock;
]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="p_bStaDoorIsClosed" Id="{24429fa2-2f34-4ca4-8f68-797eba97c8a4}" FolderPath="Properties\">
      <Declaration><![CDATA[{attribute 'monitoring':='call'}
PROPERTY PUBLIC p_bStaDoorIsClosed : BOOL]]></Declaration>
      <Get Name="Get" Id="{14e0653c-290e-48fa-a782-d3186da94953}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[
p_bStaDoorIsClosed := s_bStaDoorIsClosed;
]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="p_bStaDoorIsOpened" Id="{c89e97ac-0482-4ea2-9edb-496803d1a91b}" FolderPath="Properties\">
      <Declaration><![CDATA[{attribute 'monitoring':='call'}
PROPERTY PUBLIC p_bStaDoorIsOpened : BOOL]]></Declaration>
      <Get Name="Get" Id="{333278cf-c2f5-44cf-97f4-7df9cd2a271c}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[
p_bStaDoorIsOpened := s_bStaDoorIsOpened;
]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="p_bStaLockedAndDoorClosed" Id="{6fc03739-dce9-4ee2-80bf-9e9172243c54}" FolderPath="Properties\">
      <Declaration><![CDATA[{attribute 'monitoring':='call'}
PROPERTY PUBLIC p_bStaLockedAndDoorClosed : BOOL]]></Declaration>
      <Get Name="Get" Id="{0a1b8b1e-e1eb-426d-a4e4-2cee32698ff0}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[
p_bStaLockedAndDoorClosed := 
	s_bCmdActivateLock
	AND s_bStaDoorIsClosed;
]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="p_bStaUnlocked" Id="{eba409e8-ad05-4bb3-9969-4a62b2aa95ac}" FolderPath="Properties\">
      <Declaration><![CDATA[{attribute 'monitoring':='call'}
PROPERTY PUBLIC p_bStaUnlocked : BOOL]]></Declaration>
      <Get Name="Get" Id="{bf823654-0bfc-4f2f-be6a-1de6ec14d4a1}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[
p_bStaUnlocked := NOT(s_bStaLockIsActivated);
]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="p_bStaWarning" Id="{80aa8499-c77a-446a-944b-5da5a7ba1c7f}" FolderPath="Properties\">
      <Declaration><![CDATA[{attribute 'monitoring':='call'}
PROPERTY PUBLIC p_bStaWarning : BOOL]]></Declaration>
      <Get Name="Get" Id="{df5fb6c2-796c-48c3-bb56-91ab569de41d}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[
p_bStaWarning := s_bStaWarning;
]]></ST>
        </Implementation>
      </Get>
    </Property>
    <LineIds Name="CM_DoorLock">
      <LineId Id="410" Count="0" />
      <LineId Id="47" Count="0" />
      <LineId Id="411" Count="0" />
    </LineIds>
    <LineIds Name="CM_DoorLock._m_Alarms">
      <LineId Id="28" Count="0" />
      <LineId Id="19" Count="2" />
      <LineId Id="165" Count="0" />
      <LineId Id="167" Count="2" />
      <LineId Id="166" Count="0" />
      <LineId Id="170" Count="0" />
      <LineId Id="172" Count="0" />
      <LineId Id="157" Count="0" />
      <LineId Id="189" Count="0" />
      <LineId Id="171" Count="0" />
      <LineId Id="118" Count="0" />
      <LineId Id="154" Count="0" />
      <LineId Id="163" Count="0" />
      <LineId Id="173" Count="0" />
      <LineId Id="175" Count="0" />
      <LineId Id="174" Count="0" />
      <LineId Id="156" Count="0" />
      <LineId Id="176" Count="1" />
      <LineId Id="144" Count="0" />
      <LineId Id="182" Count="0" />
      <LineId Id="187" Count="0" />
      <LineId Id="184" Count="0" />
      <LineId Id="183" Count="0" />
      <LineId Id="134" Count="0" />
      <LineId Id="180" Count="0" />
      <LineId Id="188" Count="0" />
      <LineId Id="179" Count="0" />
      <LineId Id="135" Count="0" />
      <LineId Id="160" Count="0" />
      <LineId Id="137" Count="0" />
      <LineId Id="181" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="29" Count="0" />
    </LineIds>
    <LineIds Name="CM_DoorLock._m_Devices">
      <LineId Id="650" Count="0" />
      <LineId Id="567" Count="14" />
      <LineId Id="651" Count="1" />
      <LineId Id="655" Count="0" />
      <LineId Id="658" Count="1" />
      <LineId Id="657" Count="0" />
      <LineId Id="660" Count="0" />
      <LineId Id="654" Count="0" />
      <LineId Id="653" Count="0" />
      <LineId Id="582" Count="4" />
      <LineId Id="589" Count="60" />
      <LineId Id="13" Count="0" />
    </LineIds>
    <LineIds Name="CM_DoorLock._m_Hmi">
      <LineId Id="17" Count="3" />
      <LineId Id="122" Count="0" />
      <LineId Id="124" Count="5" />
      <LineId Id="132" Count="5" />
      <LineId Id="168" Count="0" />
      <LineId Id="171" Count="3" />
      <LineId Id="138" Count="0" />
      <LineId Id="169" Count="0" />
      <LineId Id="151" Count="0" />
      <LineId Id="175" Count="0" />
      <LineId Id="89" Count="0" />
      <LineId Id="91" Count="0" />
      <LineId Id="105" Count="0" />
      <LineId Id="104" Count="0" />
      <LineId Id="95" Count="1" />
      <LineId Id="94" Count="0" />
      <LineId Id="121" Count="0" />
      <LineId Id="106" Count="0" />
      <LineId Id="102" Count="0" />
      <LineId Id="97" Count="1" />
      <LineId Id="84" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="87" Count="0" />
    </LineIds>
    <LineIds Name="CM_DoorLock._m_Init">
      <LineId Id="21" Count="0" />
      <LineId Id="15" Count="2" />
      <LineId Id="28" Count="0" />
      <LineId Id="30" Count="0" />
      <LineId Id="29" Count="0" />
      <LineId Id="31" Count="0" />
      <LineId Id="55" Count="0" />
      <LineId Id="57" Count="0" />
      <LineId Id="56" Count="0" />
      <LineId Id="59" Count="1" />
      <LineId Id="58" Count="0" />
      <LineId Id="26" Count="1" />
      <LineId Id="49" Count="3" />
      <LineId Id="47" Count="0" />
      <LineId Id="46" Count="0" />
      <LineId Id="34" Count="0" />
      <LineId Id="33" Count="0" />
      <LineId Id="40" Count="0" />
      <LineId Id="35" Count="1" />
      <LineId Id="41" Count="0" />
      <LineId Id="37" Count="1" />
      <LineId Id="53" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="24" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="23" Count="0" />
    </LineIds>
    <LineIds Name="CM_DoorLock._m_Inputs">
      <LineId Id="13" Count="0" />
      <LineId Id="5" Count="2" />
      <LineId Id="82" Count="0" />
      <LineId Id="24" Count="0" />
      <LineId Id="23" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="74" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="8" Count="0" />
      <LineId Id="17" Count="0" />
    </LineIds>
    <LineIds Name="CM_DoorLock._m_Outputs">
      <LineId Id="29" Count="0" />
      <LineId Id="7" Count="2" />
      <LineId Id="64" Count="0" />
      <LineId Id="96" Count="0" />
      <LineId Id="83" Count="0" />
      <LineId Id="97" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="39" Count="0" />
    </LineIds>
    <LineIds Name="CM_DoorLock.m_Lock">
      <LineId Id="56" Count="0" />
      <LineId Id="44" Count="4" />
      <LineId Id="58" Count="1" />
      <LineId Id="57" Count="0" />
      <LineId Id="51" Count="4" />
      <LineId Id="3" Count="0" />
    </LineIds>
    <LineIds Name="CM_DoorLock.m_Unlock">
      <LineId Id="67" Count="0" />
      <LineId Id="52" Count="2" />
      <LineId Id="68" Count="1" />
      <LineId Id="59" Count="1" />
      <LineId Id="29" Count="0" />
    </LineIds>
    <LineIds Name="CM_DoorLock.p_bReqPrepUnlock.Get">
      <LineId Id="4" Count="0" />
      <LineId Id="6" Count="0" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="CM_DoorLock.p_bStaDoorIsClosed.Get">
      <LineId Id="5" Count="0" />
      <LineId Id="7" Count="0" />
      <LineId Id="6" Count="0" />
    </LineIds>
    <LineIds Name="CM_DoorLock.p_bStaDoorIsOpened.Get">
      <LineId Id="5" Count="0" />
      <LineId Id="7" Count="0" />
      <LineId Id="6" Count="0" />
    </LineIds>
    <LineIds Name="CM_DoorLock.p_bStaLockedAndDoorClosed.Get">
      <LineId Id="5" Count="0" />
      <LineId Id="7" Count="2" />
      <LineId Id="6" Count="0" />
    </LineIds>
    <LineIds Name="CM_DoorLock.p_bStaUnlocked.Get">
      <LineId Id="8" Count="0" />
      <LineId Id="5" Count="1" />
    </LineIds>
    <LineIds Name="CM_DoorLock.p_bStaWarning.Get">
      <LineId Id="5" Count="0" />
      <LineId Id="7" Count="0" />
      <LineId Id="6" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>