<div id="UserControl1_39" data-tchmi-type="TcHmi.Controls.System.TcHmiUserControl" data-tchmi-top="0" data-tchmi-left="0" data-tchmi-width="293" data-tchmi-height="504" data-tchmi-width-unit="px" data-tchmi-height-unit="px" data-tchmi-creator-viewport-width="500" data-tchmi-creator-viewport-height="500" data-tchmi-zindex="2">
<div id="TcHmiTextblock_Description_281" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="32" data-tchmi-height-unit="px" data-tchmi-left="10" data-tchmi-left-unit="px" data-tchmi-text="%pp%sDescription%/pp%" data-tchmi-top="10" data-tchmi-top-unit="px" data-tchmi-width="240" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-background-image-horizontal-alignment="Center" data-tchmi-text-vertical-alignment="Center" data-tchmi-text-horizontal-alignment="Center" data-tchmi-zindex="2">
</div>
<div id="TcHmiButton_Off_77" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="48" data-tchmi-height-unit="px" data-tchmi-left="34" data-tchmi-left-unit="px" data-tchmi-top="50" data-tchmi-top-unit="px" data-tchmi-width="96" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-is-enabled="%pp%bBtnReleaseBrakeEnabled%/pp%" data-tchmi-zindex="2" data-tchmi-text="Release Brake">
<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiButton_Off_77.onStatePressed",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%bCmdReleaseBrakePressed%/pp%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/Boolean",
          "value": true
        },
        "asyncWait": true
      }
    ]
  },
  {
    "event": "TcHmiButton_Off_77.onStateReleased",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%bCmdReleaseBrakePressed%/pp%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/Boolean",
          "value": false
        },
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiEllipse_BrakeReleased" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiEllipse" data-tchmi-height="24" data-tchmi-height-unit="px" data-tchmi-left="166" data-tchmi-left-unit="px" data-tchmi-top="68" data-tchmi-top-unit="px" data-tchmi-width="24" data-tchmi-width-unit="px" data-tchmi-zindex="2">
<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%pp%bStaBreakReleased%/pp%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/Boolean",
                  "symbolExpression": "%pp%bStaBreakReleased%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/Boolean",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%TcHmiEllipse_BrakeReleased::FillColor%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Color",
                  "value": {
                    "color": "rgba(0, 255, 0, 1)"
                  }
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%TcHmiEllipse_BrakeReleased::FillColor%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Color",
                  "value": null
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiTextblock_281" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="12" data-tchmi-height-unit="px" data-tchmi-left="166" data-tchmi-left-unit="px" data-tchmi-text="Brake Released" data-tchmi-top="46" data-tchmi-top-unit="px" data-tchmi-width="120" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-font-size="10" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text-vertical-alignment="Center">
</div>
<div id="TcHmiButton_On_77" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="48" data-tchmi-height-unit="px" data-tchmi-left="34" data-tchmi-left-unit="px" data-tchmi-top="118" data-tchmi-top-unit="px" data-tchmi-width="96" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-is-enabled="%pp%bBtnApplyBrakeEnabled%/pp%" data-tchmi-zindex="2" data-tchmi-text="Apply Brake">
<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiButton_On_77.onStatePressed",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%bCmdApplyBrakePressed%/pp%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/Boolean",
          "value": true
        },
        "asyncWait": true
      }
    ]
  },
  {
    "event": "TcHmiButton_On_77.onStateReleased",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%bCmdApplyBrakePressed%/pp%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/Boolean",
          "value": false
        },
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiButton_On_78" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="48" data-tchmi-height-unit="px" data-tchmi-left="34" data-tchmi-left-unit="px" data-tchmi-top="202" data-tchmi-top-unit="px" data-tchmi-width="96" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-is-enabled="%pp%bBtnForwardEnabled%/pp%" data-tchmi-zindex="2" data-tchmi-text="Move Forward">
<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiButton_On_78.onStatePressed",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%bCmdForwardPressed%/pp%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/Boolean",
          "value": true
        },
        "asyncWait": true
      }
    ]
  },
  {
    "event": "TcHmiButton_On_78.onStateReleased",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%bCmdForwardPressed%/pp%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/Boolean",
          "value": false
        },
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiButton_On_79" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="48" data-tchmi-height-unit="px" data-tchmi-left="34" data-tchmi-left-unit="px" data-tchmi-top="285" data-tchmi-top-unit="px" data-tchmi-width="96" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-is-enabled="%pp%bBtnBackwardEnabled%/pp%" data-tchmi-zindex="2" data-tchmi-text="Move Backward">
<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiButton_On_79.onStatePressed",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%bCmdBackwardPressed%/pp%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/Boolean",
          "value": true
        },
        "asyncWait": true
      }
    ]
  },
  {
    "event": "TcHmiButton_On_79.onStateReleased",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%bCmdBackwardPressed%/pp%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/Boolean",
          "value": false
        },
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiButton_On_80" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="48" data-tchmi-height-unit="px" data-tchmi-left="34" data-tchmi-left-unit="px" data-tchmi-top="357" data-tchmi-top-unit="px" data-tchmi-width="96" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-is-enabled="%pp%bBtnStopEnabled%/pp%" data-tchmi-zindex="2" data-tchmi-text="Stop">
<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiButton_On_80.onStatePressed",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%bCmdStopPressed%/pp%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/Boolean",
          "value": true
        },
        "asyncWait": true
      }
    ]
  },
  {
    "event": "TcHmiButton_On_80.onStateReleased",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%bCmdStopPressed%/pp%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/Boolean",
          "value": false
        },
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="UserControl1_52" data-tchmi-type="TcHmi.Controls.System.TcHmiUserControlHost" data-tchmi-height="24" data-tchmi-height-unit="px" data-tchmi-left="34" data-tchmi-left-unit="px" data-tchmi-sdescription="Actual Speed:" data-tchmi-sunit="mm/s" data-tchmi-target-user-control="UserControl/ucHmiNumOutputField.usercontrol" data-tchmi-top="470" data-tchmi-top-unit="px" data-tchmi-width="240" data-tchmi-width-unit="px" data-tchmi-noutputvalue="%pp%fActualSpeed%/pp%">
</div>
<div id="UserControl1_55" data-tchmi-type="TcHmi.Controls.System.TcHmiUserControlHost" data-tchmi-height="24" data-tchmi-height-unit="px" data-tchmi-left="34" data-tchmi-left-unit="px" data-tchmi-sdescription="Target Speed:" data-tchmi-sunit="mm/s" data-tchmi-target-user-control="UserControl/ucHmiNumInputField.usercontrol" data-tchmi-top="436" data-tchmi-top-unit="px" data-tchmi-width="240" data-tchmi-width-unit="px" data-tchmi-ninputvalue="%s%PLC1.GVL_Modules.g_emPalletConveyor.s_cmPalletConveyor.s_fTargetSpeed%/s%" data-tchmi-nminvalue="20" data-tchmi-nmaxvalue="0" data-tchmi-zindex="6">
</div>
<div id="TcHmiTextblock_292" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="12" data-tchmi-height-unit="px" data-tchmi-left="166" data-tchmi-left-unit="px" data-tchmi-text="Stopped" data-tchmi-top="116" data-tchmi-top-unit="px" data-tchmi-width="60" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-font-size="10" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text-vertical-alignment="Center">
</div>
<div id="TcHmiEllipse_Stopped" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiEllipse" data-tchmi-height="24" data-tchmi-height-unit="px" data-tchmi-left="166" data-tchmi-left-unit="px" data-tchmi-top="138" data-tchmi-top-unit="px" data-tchmi-width="24" data-tchmi-width-unit="px" data-tchmi-zindex="2">
<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%pp%bStaStopped%/pp%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/Boolean",
                  "symbolExpression": "%pp%bStaStopped%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/Boolean",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%TcHmiEllipse_Stopped::FillColor%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Color",
                  "value": {
                    "color": "rgba(0, 255, 0, 1)"
                  }
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%TcHmiEllipse_Stopped::FillColor%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Color",
                  "value": null
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiEllipse_Stopped_4" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiEllipse" data-tchmi-height="24" data-tchmi-height-unit="px" data-tchmi-left="166" data-tchmi-left-unit="px" data-tchmi-top="218" data-tchmi-top-unit="px" data-tchmi-width="24" data-tchmi-width-unit="px" data-tchmi-zindex="2">
<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%pp%bStaError%/pp%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/Boolean",
                  "symbolExpression": "%pp%bStaError%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/Boolean",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%TcHmiEllipse_Stopped_4::FillColor%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Color",
                  "value": {
                    "color": "rgba(255, 0, 0, 1)"
                  }
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%TcHmiEllipse_Stopped_4::FillColor%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Color",
                  "value": null
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiTextblock_293" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="12" data-tchmi-height-unit="px" data-tchmi-left="166" data-tchmi-left-unit="px" data-tchmi-text="Error" data-tchmi-top="196" data-tchmi-top-unit="px" data-tchmi-width="60" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-font-size="10" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text-vertical-alignment="Center">
</div>
</div>