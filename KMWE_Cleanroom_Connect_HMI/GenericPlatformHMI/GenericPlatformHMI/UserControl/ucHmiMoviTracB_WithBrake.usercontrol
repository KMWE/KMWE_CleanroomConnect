<div id="UserControl1_39" data-tchmi-type="TcHmi.Controls.System.TcHmiUserControl" data-tchmi-top="0" data-tchmi-left="0" data-tchmi-width="763" data-tchmi-height="504" data-tchmi-width-unit="px" data-tchmi-height-unit="px" data-tchmi-creator-viewport-width="500" data-tchmi-creator-viewport-height="500" data-tchmi-zindex="2">
<div id="TcHmiEllipse_On_1" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiEllipse" data-tchmi-height="24" data-tchmi-height-unit="px" data-tchmi-left="166" data-tchmi-left-unit="px" data-tchmi-top="130" data-tchmi-top-unit="px" data-tchmi-width="24" data-tchmi-width-unit="px" data-tchmi-zindex="2">
<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%pp%bStateOn%/pp%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/Boolean",
                  "symbolExpression": "%pp%bStateOn%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/Boolean",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%TcHmiEllipse_On2::FillColor%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Color",
                  "value": {
                    "color": "rgba(0, 255, 0, 1)"
                  }
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%TcHmiEllipse_On2::FillColor%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Color",
                  "value": null
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiTextblock_Description_281" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="32" data-tchmi-height-unit="px" data-tchmi-left="10" data-tchmi-left-unit="px" data-tchmi-text="%pp%sDescription%/pp%" data-tchmi-top="10" data-tchmi-top-unit="px" data-tchmi-width="240" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-background-image-horizontal-alignment="Center" data-tchmi-text-vertical-alignment="Center" data-tchmi-text-horizontal-alignment="Center" data-tchmi-zindex="2">
</div>
<div id="TcHmiButton_Off_77" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="48" data-tchmi-height-unit="px" data-tchmi-left="34" data-tchmi-left-unit="px" data-tchmi-top="50" data-tchmi-top-unit="px" data-tchmi-width="96" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-is-enabled="%pp%bBtnReleaseBrakeEnabled%/pp%" data-tchmi-zindex="2" data-tchmi-text="Release Brake">
<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiButton_Off_77.onStatePressed",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%bCmdReleaseBrakePressed%/pp%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/Boolean",
          "value": true
        },
        "asyncWait": true
      }
    ]
  },
  {
    "event": "TcHmiButton_Off_77.onStateReleased",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%bCmdReleaseBrakePressed%/pp%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/Boolean",
          "value": false
        },
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiEllipse_Off_1" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiEllipse" data-tchmi-height="24" data-tchmi-height-unit="px" data-tchmi-left="166" data-tchmi-left-unit="px" data-tchmi-top="64" data-tchmi-top-unit="px" data-tchmi-width="24" data-tchmi-width-unit="px" data-tchmi-zindex="2">
<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%pp%bStaOff%/pp%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/Boolean",
                  "symbolExpression": "%pp%bStaOff%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/Boolean",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%TcHmiEllipse_Off2::FillColor%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Color",
                  "value": {
                    "color": "rgba(0, 255, 0, 1)"
                  }
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%TcHmiEllipse_Off2::FillColor%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Color",
                  "value": null
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiRectangle_3" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiRectangle" data-tchmi-height="168" data-tchmi-height-unit="px" data-tchmi-left="432" data-tchmi-left-unit="px" data-tchmi-top="189" data-tchmi-top-unit="px" data-tchmi-width="240" data-tchmi-width-unit="px" data-tchmi-zindex="0">
<script data-tchmi-target-attribute="data-tchmi-background-color" type="application/json">
{
  "color": "rgba(255, 255, 0, 0.2470588)"
}
</script>
</div>
<div id="TcHmiEllipse_OnError_1" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiEllipse" data-tchmi-height="24" data-tchmi-height-unit="px" data-tchmi-left="206" data-tchmi-left-unit="px" data-tchmi-top="130" data-tchmi-top-unit="px" data-tchmi-width="24" data-tchmi-width-unit="px" data-tchmi-zindex="2">
<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%pp%bStaOnError%/pp%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/Boolean",
                  "symbolExpression": "%pp%bStaOnError%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/Boolean",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%TcHmiEllipse_OnError2::FillColor%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Color",
                  "value": {
                    "color": "rgba(255, 0, 0, 1)"
                  }
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%TcHmiEllipse_OnError2::FillColor%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Color",
                  "value": null
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiEllipse_OffError_1" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiEllipse" data-tchmi-height="24" data-tchmi-height-unit="px" data-tchmi-left="206" data-tchmi-left-unit="px" data-tchmi-top="64" data-tchmi-top-unit="px" data-tchmi-width="24" data-tchmi-width-unit="px" data-tchmi-zindex="2">
<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%pp%bStaOffError%/pp%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/Boolean",
                  "symbolExpression": "%pp%bStaOffError%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/Boolean",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%TcHmiEllipse_OffError_1::FillColor%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Color",
                  "value": {
                    "color": "rgba(255, 0, 0, 1)"
                  }
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%TcHmiEllipse_OffError_1::FillColor%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Color",
                  "value": null
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiTextblock_281" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="12" data-tchmi-height-unit="px" data-tchmi-left="166" data-tchmi-left-unit="px" data-tchmi-text="State" data-tchmi-top="46" data-tchmi-top-unit="px" data-tchmi-width="24" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-font-size="10" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text-vertical-alignment="Center">
</div>
<div id="TcHmiTextblock_282" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="12" data-tchmi-height-unit="px" data-tchmi-left="206" data-tchmi-left-unit="px" data-tchmi-text="Error" data-tchmi-top="46" data-tchmi-top-unit="px" data-tchmi-width="24" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-font-size="10" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text-vertical-alignment="Center">
</div>
<div id="TcHmiButton_On_77" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="48" data-tchmi-height-unit="px" data-tchmi-left="34" data-tchmi-left-unit="px" data-tchmi-top="118" data-tchmi-top-unit="px" data-tchmi-width="96" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-is-enabled="%pp%bBtnApplyBrakeEnabled%/pp%" data-tchmi-zindex="2" data-tchmi-text="Apply Brake">
<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiButton_On_77.onStatePressed",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%bCmdApplyBrakePressed%/pp%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/Boolean",
          "value": true
        },
        "asyncWait": true
      }
    ]
  },
  {
    "event": "TcHmiButton_On_77.onStateReleased",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%bCmdApplyBrakePressed%/pp%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/Boolean",
          "value": false
        },
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiButton_On_78" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="48" data-tchmi-height-unit="px" data-tchmi-left="34" data-tchmi-left-unit="px" data-tchmi-top="202" data-tchmi-top-unit="px" data-tchmi-width="96" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-is-enabled="%pp%bBtnForwardEnabled%/pp%" data-tchmi-zindex="2" data-tchmi-text="Move Forward">
<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiButton_On_78.onStatePressed",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%bCmdForwardPressed%/pp%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/Boolean",
          "value": true
        },
        "asyncWait": true
      }
    ]
  },
  {
    "event": "TcHmiButton_On_78.onStateReleased",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%bCmdForwardPressed%/pp%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/Boolean",
          "value": false
        },
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiButton_On_79" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="48" data-tchmi-height-unit="px" data-tchmi-left="34" data-tchmi-left-unit="px" data-tchmi-top="285" data-tchmi-top-unit="px" data-tchmi-width="96" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-is-enabled="%pp%bBtnBackwardEnabled%/pp%" data-tchmi-zindex="2" data-tchmi-text="Move Backward">
<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiButton_On_79.onStatePressed",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%bCmdBackwardPressed%/pp%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/Boolean",
          "value": true
        },
        "asyncWait": true
      }
    ]
  },
  {
    "event": "TcHmiButton_On_79.onStateReleased",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%bCmdBackwardPressed%/pp%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/Boolean",
          "value": false
        },
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiButton_On_80" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="48" data-tchmi-height-unit="px" data-tchmi-left="34" data-tchmi-left-unit="px" data-tchmi-top="357" data-tchmi-top-unit="px" data-tchmi-width="96" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-is-enabled="%pp%bBtnStopEnabled%/pp%" data-tchmi-zindex="2" data-tchmi-text="Stop">
<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiButton_On_80.onStatePressed",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%bCmdStopPressed%/pp%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/Boolean",
          "value": true
        },
        "asyncWait": true
      }
    ]
  },
  {
    "event": "TcHmiButton_On_80.onStateReleased",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%bCmdStopPressed%/pp%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/Boolean",
          "value": false
        },
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiTextblock_283" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="24" data-tchmi-height-unit="px" data-tchmi-left="453" data-tchmi-left-unit="px" data-tchmi-text="Target Speed:" data-tchmi-top="210" data-tchmi-top-unit="px" data-tchmi-width="120" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-font-size="12" data-tchmi-text-vertical-alignment="Center">
</div>
<div id="TcHmiTextblock_284" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="24" data-tchmi-height-unit="px" data-tchmi-left="446" data-tchmi-left-unit="px" data-tchmi-text="Actual Speed:" data-tchmi-top="291" data-tchmi-top-unit="px" data-tchmi-width="120" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-font-size="12" data-tchmi-text-vertical-alignment="Center">
</div>
<div id="TcHmiTextbox_7" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextbox" data-tchmi-height="24" data-tchmi-height-unit="px" data-tchmi-left="453" data-tchmi-left-unit="px" data-tchmi-text="%f%%pp%fTargetSpeed%/pp%+ ' mm/s'%/f%" data-tchmi-top="255" data-tchmi-top-unit="px" data-tchmi-width="120" data-tchmi-width-unit="px" data-tchmi-is-enabled="false">
<script data-tchmi-target-attribute="data-tchmi-content-padding" type="application/json">
{
  "top": 3,
  "right": 3,
  "bottom": 3,
  "left": 3
}
</script>

</div>
<div id="TcHmiTextbox_8" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextbox" data-tchmi-height="24" data-tchmi-height-unit="px" data-tchmi-left="446" data-tchmi-left-unit="px" data-tchmi-text="%f%%pp%fActualSpeed%/pp%+ ' mm/s'%/f%" data-tchmi-top="325" data-tchmi-top-unit="px" data-tchmi-width="120" data-tchmi-width-unit="px">
<script data-tchmi-target-attribute="data-tchmi-content-padding" type="application/json">
{
  "top": 3,
  "right": 3,
  "bottom": 3,
  "left": 3
}
</script>

</div>
<div id="TcHmiContainer" data-tchmi-type="TcHmi.Controls.System.TcHmiContainer" data-tchmi-height="93" data-tchmi-height-unit="px" data-tchmi-left="240" data-tchmi-left-unit="px" data-tchmi-top="93" data-tchmi-top-unit="px" data-tchmi-width="136" data-tchmi-width-unit="px" data-tchmi-visibility="Hidden">
<div id="TcHmiNumpad" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiKeyboard" data-tchmi-height="81" data-tchmi-height-unit="px" data-tchmi-label-font-size="14" data-tchmi-layout-file="KeyboardLayouts/Numpad.keyboard.json" data-tchmi-left="5" data-tchmi-left-unit="px" data-tchmi-scale-mode="ScaleToFit" data-tchmi-top="5" data-tchmi-top-unit="px" data-tchmi-width="89" data-tchmi-width-unit="px" data-tchmi-visibility="Visible">
<script data-tchmi-target-attribute="data-tchmi-indirect-input-padding" type="application/json">
{
  "top": 3,
  "right": 3,
  "bottom": 3,
  "left": 3
}
</script>
<script data-tchmi-target-attribute="data-tchmi-keyboard-padding" type="application/json">
{
  "top": 10,
  "topUnit": "px",
  "right": 10,
  "rightUnit": "px",
  "bottom": 10,
  "bottomUnit": "px",
  "left": 10,
  "leftUnit": "px"
}
</script>
<script data-tchmi-target-attribute="data-tchmi-key-padding" type="application/json">
{
  "top": 4,
  "topUnit": "px",
  "right": 4,
  "rightUnit": "px",
  "bottom": 4,
  "bottomUnit": "px",
  "left": 4,
  "leftUnit": "px"
}
</script>
<script data-tchmi-target-attribute="data-tchmi-additional-key-backdrop-padding" type="application/json">
{
  "top": 10,
  "topUnit": "px",
  "right": 10,
  "rightUnit": "px",
  "bottom": 10,
  "bottomUnit": "px",
  "left": 10,
  "leftUnit": "px"
}
</script>





</div>
<div id="TcHmiButton_77" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="24" data-tchmi-height-unit="px" data-tchmi-left="104" data-tchmi-left-unit="px" data-tchmi-text="X" data-tchmi-top="4" data-tchmi-top-unit="px" data-tchmi-width="24" data-tchmi-width-unit="px" data-tchmi-word-wrap="true">

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiButton_77.onPressed",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%TcHmiContainer::Visibility%/ctrl%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:framework#/definitions/Visibility",
          "value": "Hidden"
        },
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
</div>
<div id="UserControl1_52" data-tchmi-type="TcHmi.Controls.System.TcHmiUserControlHost" data-tchmi-height="24" data-tchmi-height-unit="px" data-tchmi-left="34" data-tchmi-left-unit="px" data-tchmi-sdescription="Actual Speed:" data-tchmi-sunit="mm/s" data-tchmi-target-user-control="UserControl/ucHmiNumOutputField.usercontrol" data-tchmi-top="464" data-tchmi-top-unit="px" data-tchmi-width="240" data-tchmi-width-unit="px" data-tchmi-noutputvalue="%pp%fActualSpeed%/pp%">
</div>
<div id="UserControl1_53" data-tchmi-type="TcHmi.Controls.System.TcHmiUserControlHost" data-tchmi-height="24" data-tchmi-height-unit="px" data-tchmi-left="34" data-tchmi-left-unit="px" data-tchmi-sdescription="Target Speed:" data-tchmi-sunit="mm/s" data-tchmi-target-user-control="UserControl/ucHmiNumInputField.usercontrol" data-tchmi-top="430" data-tchmi-top-unit="px" data-tchmi-width="240" data-tchmi-width-unit="px" data-tchmi-is-enabled="true" data-tchmi-ninputvalue="%s%PLC1.GVL_Modules.g_emPalletConveyor.s_cmPalletConveyor.s_fTargetSpeed%/s%">
</div>
</div>