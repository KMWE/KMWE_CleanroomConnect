<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="EM_Doors" Id="{0ea26ddd-052a-4260-bfaf-0daade60103a}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK EM_Doors EXTENDS EM_Base
VAR CONSTANT 
	c_nResultDataSize : UINT := 20;
END_VAR
VAR
//------------------------------------------//
//Control Modules (Devices)
	s_cmSpeedDoorOuter : CM_SpeedDoor;
	s_cmDoorLockCleanroom : CM_DoorLock;
//------------------------------------------//

//------------------------------------------//
//Inputs
	s_diBtnToggleLock	: FB_DigInput;

//------------------------------------------//
	s_doLedLockState  : FB_DigOutput;
//------------------------------------------//
//Outputs

//------------------------------------------//

//------------------------------------------//
//Params
	//Tool settings
	s_fbParamToolHardwareNr				: FB_HmiParamHandler;
    s_fbParamToolSoftwareVersion		: FB_HmiParamHandler;

	s_fbParamName						: FB_HmiParamHandler;
	s_fbParamNumber						: FB_HmiParamHandler;
	s_fbParamRevision                   : FB_HmiParamHandler;
	
	s_fbParamTeslaMeterIp				: FB_HmiParamHandler;
	s_fbParamTeslaMeterPort				: FB_HmiParamHandler;
	
	//Product settings (Maybe)
	s_fbParamTotalStroke				: FB_HmiParamHandler;
	s_fbParamStepStroke					: FB_HmiParamHandler;
	s_fbParamAveragingNumberTest		: FB_HmiParamHandler;
	
	s_fbParamaMaxMagnitudeCriteria		: FB_HmiParamHandler;
	
	s_fbParamRefIduBottom				: FB_HmiParamHandler;
	s_fbParamRefItm                     : FB_HmiParamHandler;
	s_fbParamRefCenterTpmPipe           : FB_HmiParamHandler;
	s_fbParamRefCpValve					: FB_HmiParamHandler;
//------------------------------------------//

//------------------------------------------//
//Variables
	s_sTestResult 						: STRING;
	
	s_eCurrentTest						: E_TestMode;
	s_stCommandsTesla					: ST_SCPI_TeslaCommands;
	
	
	// Interlocks
	s_bIlckSpeedDoorOuterToOpen 		: BOOL := TRUE;
	s_bIlckSpeedDoorOuterToClose 		: BOOL := TRUE;
	
	s_bIlckDoorLockCleanroomToOpen 		: BOOL := TRUE;
	
//------------------------------------------//

//------------------------------------------//
//Sensor data	
	s_aMagneticX						: ARRAY[0..c_nResultDataSize] OF LREAL;
	s_aMagneticY						: ARRAY[0..c_nResultDataSize] OF LREAL;
	s_aMagneticZ						: ARRAY[0..c_nResultDataSize] OF LREAL;
	s_aMagneticMagnitude				: ARRAY[0..c_nResultDataSize] OF LREAL;
	s_aProbePositionZ					: ARRAY[0..c_nResultDataSize] OF LREAL;
	
	s_sXMLData							: STRING(Param_Project.n_MaxLenghtXmlDbRow*Param_Project.n_NumberofRowsXmlDb);
	
	s_aHmi_MagneticTest					: ARRAY[1..3,0..c_nResultDataSize] OF ST_POINT;
	
//	s_aHmi_ProbePositionZ				: ARRAY[1..1,1..GVL_Datalogging.c_nHmiLogSize] OF ST_POINT;
//------------------------------------------//

//------------------------------------------//
//Alarms

//------------------------------------------//

//------------------------------------------//
//Hmi
	s_nToHmiStepNr						: INT;
	s_nToHmiMaxStepNr					: INT;
	s_sToHmiInstructionText				: T_MAXSTRING;
	s_sToHmiProcedure					: T_MAXSTRING;
	
	s_fbHmiBtnStart						: FB_HmiBtn;
	s_fbHmiBtnStop						: FB_HmiBtn;	
	s_fbHmiBtnDiagnosticsLogging		: FB_HmiBtn;
	
	s_fbHmiProbeMotor 					: Hmi_Motor_Base;
	
	s_fbHmiBtnEnableMotor				: FB_HmiBtn;
	s_fbHmiBtnHomeMotor					: FB_HmiBtn;
	s_fbHmiBtnGetField					: FB_HmiBtn;
	
	s_fbHmiLedHomedMotor				: FB_HmiLed;
	s_fbHmiTableDownPressed				: FB_HmiLed;
	s_fbHmiStopPressed					: FB_HmiLed;
	s_fbHmiTableDownSensor				: FB_HmiLed;
//------------------------------------------//
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
SUPER^();
]]></ST>
    </Implementation>
    <Folder Name="Methods" Id="{743af6a4-b0c9-4597-8470-ed8437c4e009}" />
    <Folder Name="Properties" Id="{ab544e78-bef9-455b-a1de-3328ca2e31c7}" />
    <Method Name="_m_Alarms" Id="{34703853-800b-4320-8e6c-49abce8785b7}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD PROTECTED _m_Alarms : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
IF NOT SUPER^._m_Alarms() THEN
	RETURN;
END_IF

_m_Alarms := TRUE;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="_m_Devices" Id="{c18c3403-a619-4da8-8c16-d38b3f2bd5db}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD PROTECTED _m_Devices : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
IF NOT SUPER^._m_Devices() THEN
	RETURN;
END_IF

s_cmSpeedDoorOuter(
	i_bReqEnable := i_bReqEnable, 
	i_eCtrlMode := i_eCtrlMode, 
	i_bCmdReset := i_bCmdReset, 
	i_sCmName := 'Speed door outer', 
	i_stSettings := );
	
s_cmDoorLockCleanroom(
	i_bReqEnable := i_bReqEnable, 
	i_eCtrlMode := i_eCtrlMode, 
	i_bCmdReset := i_bCmdReset, 
	i_sCmName := 'Door lock cleanroom', 
	i_stSettings := );	

(*	
	// Interlocks (doors must work as an airlock, only one door may be opened at all times)
	s_bIlckSpeedDoorOuterToOpen :=
		s_cmDoorLockCleanroom.p_bStaError
		OR NOT(s_cmDoorLockCleanroom.p_bStaEnabled)
		NOT(s_cmDoorLockCleanroom.p_bStaDoorIsClosed)
		OR NOT (s_cmDoorLockCleanroom.p_bStaLockIsApplied)
		OR s_cmDoorLockCleanroom.p_bStaLockIsReleased
		OR TRUE (*Air treathment unit must be running and ok*)
		OR TRUE (*Add more..*);
	s_bIlckSpeedDoorOuterToClose :=
		TRUE (*Opening must be free*)
		OR TRUE (*Add more..*);
	
	s_bIlckDoorLockCleanroomToOpen :=
		s_cmSpeedDoorOuter.p_bStaError
		OR NOT(s_cmSpeedDoorOuter.p_bStaEnabled)
		OR NOT(s_cmSpeedDoorOuter.p_bStaIsClosed)
		OR s_cmSpeedDoorOuter.p_bStaIsClosing
		OR s_cmSpeedDoorOuter.p_bStaIsOpened
		OR s_cmSpeedDoorOuter.p_bStaIsOpening
		OR TRUE (*Air treathment unit must be running and ok*)
		OR TRUE (*Add more..*);
*)	
_m_Devices := TRUE;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="_m_Hmi" Id="{06e9697b-07d7-4e29-8455-791381b5d99d}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD Protected _m_Hmi : BOOL
VAR_INPUT
END_VAR
VAR_INST
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT SUPER^._m_Hmi() THEN
	RETURN;
END_IF

s_fbHmiBtnDiagnosticsLogging();
s_fbHmiBtnStart();
s_fbHmiBtnStop();

s_fbHmiBtnEnableMotor();
s_fbHmiBtnHomeMotor();
s_fbHmiBtnGetField();

s_fbHmiProbeMotor(i_IMotor := s_CmProbeMotor);

s_fbHmiLedHomedMotor(i_bStaLed := s_CmProbeMotor.p_bStaMotorHomed);
s_fbHmiTableDownPressed(i_bStaLed := s_diBtnTableDown.p_bStaInput);
s_fbHmiTableDownSensor(i_bStaLed := s_diTableDownSensor.p_bStaInput);
s_fbHmiStopPressed(i_bStaLed := s_diBtnStop.p_bStaInput);

_m_Hmi := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="_m_Init" Id="{f5588ebd-495a-4c31-a7f5-23415377d40e}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD PROTECTED _m_Init : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
IF NOT SUPER^._m_Init() THEN
	RETURN;
END_IF

//----------------------------------//
//CM
	s_cmSpeedDoorOuter.i_stSettings.

	s_CmProbeMotor.i_bReqEnable						:= FALSE;
	s_CmProbeMotor.i_sCmName 						:= 'Probe motor';
	s_CmProbeMotor.i_eBtnCtrlType					:= E_HmiButtonType.PUSHBUTTON;
	s_CmProbeMotor.i_bCfgReverseDirection			:= FALSE;
	s_CmProbeMotor.p_bCfgMovingForward				:= TRUE;
	s_CmProbeMotor.p_bCfgMovingReverse				:= TRUE;
	s_CmProbeMotor.p_fSetMotorVelo					:= 10;
	
	s_CmProbeMotor.i_stSettings.i_fAccelaration 	:= 1000;
	s_CmProbeMotor.i_stSettings.i_fDecelaration		:= 1000;
	s_CmProbeMotor.i_stSettings.i_fJerk				:= 10000;
	
	s_CmTeslaMeter.i_bReqEnable						:= FALSE;
	s_CmTeslaMeter.i_stSettings.tConnectionTimeOut	:= T#5S;

	
//---------------------------------//	
	
//----------------------------------//	
//Hmi 
	s_fbHmiBtnDiagnosticsLogging.p_eButtontype 			:= E_HmiButtonType.TOGGLEBUTTON;
	s_fbHmiBtnDiagnosticsLogging.p_bStaVisible 			:= TRUE;
	s_fbHmiBtnDiagnosticsLogging.p_bStaEnabled 			:= TRUE;
	s_fbHmiBtnDiagnosticsLogging.p_sBtnText				:= 'Diagnostics Logging';
	
	s_fbHmiBtnStart.p_eButtontype 						:= E_HmiButtonType.PUSHBUTTON;
	s_fbHmiBtnStart.p_bStaVisible 						:= FALSE;
	s_fbHmiBtnStart.p_bStaEnabled 						:= FALSE;		
	s_fbHmiBtnStart.p_sBtnText							:= 'Start';

	s_fbHmiBtnStop.p_eButtontype 						:= E_HmiButtonType.PUSHBUTTON;
	s_fbHmiBtnStop.p_bStaVisible 						:= FALSE;
	s_fbHmiBtnStop.p_bStaEnabled 						:= FALSE;		
	s_fbHmiBtnStop.p_sBtnText							:= 'Stop';
	
	s_fbHmiBtnEnableMotor.p_eButtontype 				:= E_HmiButtonType.TOGGLEBUTTON;
	s_fbHmiBtnEnableMotor.p_bStaVisible 				:= TRUE;
	s_fbHmiBtnEnableMotor.p_bStaEnabled 				:= FALSE;		
	s_fbHmiBtnEnableMotor.p_sBtnText					:= 'Enable motor';
	
	s_fbHmiBtnGetField.p_eButtontype 					:= E_HmiButtonType.PUSHBUTTON;
	s_fbHmiBtnGetField.p_bStaVisible 					:= TRUE;
	s_fbHmiBtnGetField.p_bStaEnabled 					:= FALSE;		
	s_fbHmiBtnGetField.p_sBtnText						:= 'Get magnetic field';
	
	s_fbHmiBtnHomeMotor.p_eButtontype 					:= E_HmiButtonType.PUSHBUTTON;
	s_fbHmiBtnHomeMotor.p_bStaVisible 					:= TRUE;
	s_fbHmiBtnHomeMotor.p_bStaEnabled 					:= FALSE;		
	s_fbHmiBtnHomeMotor.p_sBtnText						:= 'Home motor';
//----------------------------------//	


//----------------------------------//	
//Initialize all moving averages

//----------------------------------//	

//----------------------------------//	
//Inputs
s_diTableDownSensor.i_stSettings.tmInputDelay	:= T#0S;	
s_diBtnTableDown.i_stSettings.tmInputDelay		:= T#0S;
s_diBtnStop.i_stSettings.tmInputDelay			:= T#0S;
//----------------------------------//	

//----------------------------------//	
//Inputs
s_doRelayTableDown.i_stSettings.bCfgDelay		:= FALSE;	
s_doRelayTableDown.i_stSettings.tmOutputDelay	:= T#0S;	
//----------------------------------//	

_m_Init := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="_m_Inputs" Id="{08e3676c-19d2-4657-8762-4d7303d85c82}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD PROTECTED _m_Inputs : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
IF NOT SUPER^._m_Inputs() THEN
	RETURN;
END_IF

s_diTableDownSensor();
s_diBtnTableDown();	
s_diBtnStop();			

_m_Inputs := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="_m_Outputs" Id="{f763b42e-2a14-49e4-aeec-3b4dc606af2b}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD PROTECTED _m_Outputs : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
IF NOT SUPER^._m_Outputs() THEN
	RETURN;
END_IF

s_doRelayTableDown(); //i_bStaOutput written in procedure or manual mode

_m_Outputs := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="_m_Params" Id="{02936153-be53-403e-812d-8d9a77c13756}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD PROTECTED _m_Params : BOOL
VAR_INST
	s_fToHmiXAxisMin	: LREAL;
	s_fToHmiXAxisMax	: LREAL;
	s_fToHmiYAxisMin	: LREAL;
	s_fToHmiYAxisMax	: LREAL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
IF NOT SUPER^._m_Params() THEN
	RETURN;
END_IF

s_fbParamToolHardwareNr(i_fDefaultValue				:= 0,
						i_nArrayFolderIndex			:= 1,
						i_sName						:= 'Harware ID',
						i_bIsNumber					:= FALSE);

s_fbParamToolSoftwareVersion(i_fDefaultValue		:= 0,
							i_nArrayFolderIndex		:= 1,
							i_sName					:= 'Software Version',
							i_bIsNumber				:= FALSE);

s_fbParamName(i_fDefaultValue						:= 0,
				i_nArrayFolderIndex					:= 1,
				i_sName								:= 'Description',
				i_bIsNumber							:= FALSE);
							
s_fbParamTeslaMeterIp(i_fDefaultValue			:= 0,
						i_nArrayFolderIndex		:= 1,
						i_sName					:= 'Tesla meter ip adress',
						i_bIsNumber				:= FALSE);
						
s_fbParamTeslaMeterPort(i_fDefaultValue			:= 0,
						i_nArrayFolderIndex		:= 1,
						i_sName					:= 'Tesla meter port number',
						i_bIsNumber				:= TRUE);

//---------

						
s_fbParamTotalStroke(i_fDefaultValue			:= 100,
						i_nArrayFolderIndex		:= 2,
						i_sName					:= 'Total measurement stroke',
						i_bIsNumber				:= TRUE);
						
s_fbParamStepStroke(i_fDefaultValue				:= 10,
						i_nArrayFolderIndex		:= 2,
						i_sName					:= 'Step distance per measurement',
						i_bIsNumber				:= TRUE);

s_fbParamAveragingNumberTest(i_fDefaultValue		:= 10,
							i_nArrayFolderIndex		:= 2,
							i_sName					:= 'Number of measurements per step for averaging the magnetic field',
							i_bIsNumber				:= TRUE);
							
s_fbParamaMaxMagnitudeCriteria(i_fDefaultValue		:= 100,
							i_nArrayFolderIndex		:= 2,
							i_sName					:= 'Maximum allowed magnitude magnetic field (Test)',
							i_bIsNumber				:= TRUE);

s_fbParamRefIduBottom(i_fDefaultValue				:= 0,
							i_nArrayFolderIndex		:= 2,
							i_sName					:= 'Distance from home position to lower IDU Bottom',
							i_bIsNumber				:= TRUE);
							
s_fbParamRefItm(i_fDefaultValue						:= 0,
							i_nArrayFolderIndex		:= 2,
							i_sName					:= 'Distance from home position Itm lower IDU / upper IDU',
							i_bIsNumber				:= TRUE);
							
s_fbParamRefCenterTpmPipe(i_fDefaultValue			:= 0,
							i_nArrayFolderIndex		:= 2,
							i_sName					:= 'Distance from home position to centre TPM pipe',
							i_bIsNumber				:= TRUE);
							
s_fbParamRefCpValve(i_fDefaultValue		:= 0,
							i_nArrayFolderIndex		:= 2,
							i_sName					:= 'Distance from home position to bottom C/P valve',
							i_bIsNumber				:= TRUE);				

GVL_DataLogging.g_stReportData.CabinetSerialNumber      := s_fbParamToolHardwareNr.p_sValue;
GVL_DataLogging.g_stReportData.TesterSoftwareVersion    := s_fbParamToolSoftwareVersion.p_sValue;
GVL_DataLogging.g_stReportData.Operator                 := GVL.g_sUser;
GVL_DataLogging.g_stReportData.Note						:= GVL.g_sNotesEntry;
//GVL_DataLogging.g_stReportData.Message can be filled in test procedure with for example the error if test is stopped
GVL_DataLogging.g_stReportData.SerialNumber             := GVL.g_sSerialNumber;

s_fToHmiXAxisMin	:= -2*s_fbParamaMaxMagnitudeCriteria.p_fValue;
s_fToHmiXAxisMax	:= 2*s_fbParamaMaxMagnitudeCriteria.p_fValue;
s_fToHmiYAxisMin	:= s_CmProbeMotor.p_fHomePosition;
s_fToHmiYAxisMax	:= s_fbParamRefCpValve.p_fValue*1.2;

_m_Params := TRUE;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="m_Main" Id="{c1559ad6-cc3e-4059-9eff-299ddfbeac7b}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD PUBLIC m_Main : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
IF NOT SUPER^.m_Main() THEN
	RETURN;
END_IF

CASE i_eCtrlMode OF
	E_CtrlMode.IDLE:
		IF s_CmProbeMotor.p_bStaEnabled THEN
			s_CmProbeMotor.m_DisableAxis();
			s_fbHmiBtnEnableMotor.m_Off();
			s_fbHmiBtnHomeMotor.p_bStaEnabled := FALSE;
		END_IF
		
		s_eCurrentTest	:= 	E_TestMode.IDLE;
	
		s_fbHmiBtnStop.p_bStaVisible := FALSE;
		s_fbHmiBtnStop.p_bStaEnabled := FALSE;		
		
	E_CtrlMode.AUTOMATIC:
		
		CASE s_eCurrentTest OF
			E_TestMode.IDLE:
				GVL.g_bLedFlashSlow			:= FALSE;
				
				s_CmProbeMotor.i_bReqEnable	:= FALSE;
			
				GVL_KMWEGenericLib.g_fbHmiBtnReturn.p_bStaEnabled 	:= TRUE;
				GVL_KMWEGenericLib.g_fbHmiBtnReturn.p_bStaVisible 	:= TRUE;
				
				IF GVL.g_sToHmiMiddleContent = GVL.g_stHmiMiddle.OperatorInputData THEN
					IF NOT GVL_KMWEGenericLib.g_fbAlarmManager.p_bAlarmActive THEN
						s_fbHmiBtnStart.p_bStaVisible	:= TRUE;
						s_fbHmiBtnStart.p_bStaEnabled	:= TRUE;
					ELSE
						s_fbHmiBtnStart.p_bStaVisible	:= FALSE;
						s_fbHmiBtnStart.p_bStaEnabled	:= FALSE;
					END_IF
				END_IF
				
				IF s_fbHmiBtnStart.p_osrBtnPress THEN
					s_eCurrentTest := E_TestMode.Magnetic; 
				END_IF 
				
			E_TestMode.Magnetic:	
				_m_Procedure_Test(i_bCmdReset			:= s_fbHmiBtnStart.p_osfBtnPress, 
									i_bStaError			:= GVL_KMWEGenericLib.g_fbAlarmManager.p_bAlarmActive OR s_fbHmiBtnStop.p_osrBtnPress OR s_diBtnStop.p_osrOn);
		END_CASE
		
	E_CtrlMode.MANUAL:
		_m_Manual(i_bCmdReset			:= GVL.g_UnRMMT.s_fbHmiBtnManual.p_osfBtnPress OR GVL_KMWEGenericLib.g_fbAlarmManager.p_osrReset, 
					i_bStaError			:= GVL_KMWEGenericLib.g_fbAlarmManager.p_bAlarmActive OR s_fbHmiBtnStop.p_osrBtnPress OR s_diBtnStop.p_osrOn);	
END_CASE
]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="EM_Doors">
      <LineId Id="221" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="222" Count="0" />
    </LineIds>
    <LineIds Name="EM_Doors._m_Alarms">
      <LineId Id="12" Count="0" />
      <LineId Id="8" Count="1" />
      <LineId Id="7" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="14" Count="0" />
    </LineIds>
    <LineIds Name="EM_Doors._m_Devices">
      <LineId Id="35" Count="0" />
      <LineId Id="6" Count="2" />
      <LineId Id="36" Count="0" />
      <LineId Id="38" Count="4" />
      <LineId Id="37" Count="0" />
      <LineId Id="43" Count="0" />
      <LineId Id="45" Count="4" />
      <LineId Id="44" Count="0" />
      <LineId Id="51" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="52" Count="0" />
      <LineId Id="56" Count="0" />
      <LineId Id="77" Count="1" />
      <LineId Id="59" Count="0" />
      <LineId Id="71" Count="0" />
      <LineId Id="73" Count="0" />
      <LineId Id="60" Count="0" />
      <LineId Id="62" Count="0" />
      <LineId Id="57" Count="0" />
      <LineId Id="61" Count="0" />
      <LineId Id="63" Count="0" />
      <LineId Id="58" Count="0" />
      <LineId Id="55" Count="0" />
      <LineId Id="74" Count="1" />
      <LineId Id="53" Count="0" />
      <LineId Id="69" Count="0" />
      <LineId Id="65" Count="0" />
      <LineId Id="70" Count="0" />
      <LineId Id="76" Count="0" />
      <LineId Id="66" Count="0" />
      <LineId Id="54" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="50" Count="0" />
    </LineIds>
    <LineIds Name="EM_Doors._m_Hmi">
      <LineId Id="7" Count="2" />
      <LineId Id="199" Count="0" />
      <LineId Id="197" Count="1" />
      <LineId Id="191" Count="0" />
      <LineId Id="206" Count="0" />
      <LineId Id="205" Count="0" />
      <LineId Id="208" Count="0" />
      <LineId Id="207" Count="0" />
      <LineId Id="200" Count="0" />
      <LineId Id="192" Count="0" />
      <LineId Id="210" Count="0" />
      <LineId Id="209" Count="0" />
      <LineId Id="190" Count="0" />
      <LineId Id="217" Count="0" />
      <LineId Id="215" Count="1" />
      <LineId Id="6" Count="0" />
    </LineIds>
    <LineIds Name="EM_Doors._m_Init">
      <LineId Id="203" Count="0" />
      <LineId Id="5" Count="5" />
      <LineId Id="205" Count="0" />
      <LineId Id="204" Count="0" />
      <LineId Id="175" Count="0" />
      <LineId Id="121" Count="0" />
      <LineId Id="126" Count="1" />
      <LineId Id="129" Count="0" />
      <LineId Id="132" Count="0" />
      <LineId Id="135" Count="0" />
      <LineId Id="162" Count="0" />
      <LineId Id="136" Count="2" />
      <LineId Id="141" Count="0" />
      <LineId Id="176" Count="0" />
      <LineId Id="198" Count="1" />
      <LineId Id="146" Count="0" />
      <LineId Id="35" Count="3" />
      <LineId Id="147" Count="12" />
      <LineId Id="88" Count="0" />
      <LineId Id="181" Count="0" />
      <LineId Id="189" Count="0" />
      <LineId Id="182" Count="3" />
      <LineId Id="190" Count="0" />
      <LineId Id="186" Count="2" />
      <LineId Id="191" Count="0" />
      <LineId Id="193" Count="2" />
      <LineId Id="192" Count="0" />
      <LineId Id="89" Count="4" />
      <LineId Id="97" Count="4" />
      <LineId Id="166" Count="1" />
      <LineId Id="118" Count="1" />
      <LineId Id="168" Count="0" />
      <LineId Id="170" Count="2" />
      <LineId Id="174" Count="0" />
      <LineId Id="169" Count="0" />
      <LineId Id="120" Count="0" />
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="EM_Doors._m_Inputs">
      <LineId Id="46" Count="0" />
      <LineId Id="6" Count="2" />
      <LineId Id="40" Count="2" />
      <LineId Id="39" Count="0" />
      <LineId Id="35" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="EM_Doors._m_Outputs">
      <LineId Id="20" Count="0" />
      <LineId Id="6" Count="2" />
      <LineId Id="16" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="EM_Doors._m_Params">
      <LineId Id="291" Count="0" />
      <LineId Id="164" Count="0" />
      <LineId Id="166" Count="1" />
      <LineId Id="165" Count="0" />
      <LineId Id="6" Count="8" />
      <LineId Id="159" Count="3" />
      <LineId Id="35" Count="0" />
      <LineId Id="163" Count="0" />
      <LineId Id="235" Count="7" />
      <LineId Id="40" Count="0" />
      <LineId Id="199" Count="0" />
      <LineId Id="180" Count="0" />
      <LineId Id="185" Count="0" />
      <LineId Id="189" Count="0" />
      <LineId Id="191" Count="2" />
      <LineId Id="190" Count="0" />
      <LineId Id="194" Count="0" />
      <LineId Id="196" Count="2" />
      <LineId Id="195" Count="0" />
      <LineId Id="203" Count="0" />
      <LineId Id="222" Count="2" />
      <LineId Id="207" Count="0" />
      <LineId Id="250" Count="0" />
      <LineId Id="234" Count="0" />
      <LineId Id="232" Count="1" />
      <LineId Id="230" Count="0" />
      <LineId Id="251" Count="0" />
      <LineId Id="256" Count="2" />
      <LineId Id="253" Count="0" />
      <LineId Id="259" Count="0" />
      <LineId Id="261" Count="2" />
      <LineId Id="260" Count="0" />
      <LineId Id="264" Count="0" />
      <LineId Id="266" Count="2" />
      <LineId Id="265" Count="0" />
      <LineId Id="269" Count="0" />
      <LineId Id="271" Count="2" />
      <LineId Id="270" Count="0" />
      <LineId Id="220" Count="0" />
      <LineId Id="210" Count="1" />
      <LineId Id="174" Count="0" />
      <LineId Id="214" Count="0" />
      <LineId Id="213" Count="0" />
      <LineId Id="158" Count="0" />
      <LineId Id="274" Count="1" />
      <LineId Id="246" Count="0" />
      <LineId Id="45" Count="0" />
      <LineId Id="281" Count="0" />
      <LineId Id="283" Count="0" />
      <LineId Id="282" Count="0" />
      <LineId Id="292" Count="0" />
    </LineIds>
    <LineIds Name="EM_Doors.m_Main">
      <LineId Id="178" Count="0" />
      <LineId Id="6" Count="2" />
      <LineId Id="10" Count="2" />
      <LineId Id="163" Count="0" />
      <LineId Id="165" Count="0" />
      <LineId Id="167" Count="1" />
      <LineId Id="166" Count="0" />
      <LineId Id="164" Count="0" />
      <LineId Id="157" Count="1" />
      <LineId Id="86" Count="1" />
      <LineId Id="67" Count="0" />
      <LineId Id="72" Count="0" />
      <LineId Id="88" Count="2" />
      <LineId Id="159" Count="0" />
      <LineId Id="170" Count="1" />
      <LineId Id="160" Count="0" />
      <LineId Id="176" Count="0" />
      <LineId Id="175" Count="0" />
      <LineId Id="174" Count="0" />
      <LineId Id="173" Count="0" />
      <LineId Id="133" Count="0" />
      <LineId Id="143" Count="0" />
      <LineId Id="135" Count="1" />
      <LineId Id="144" Count="0" />
      <LineId Id="138" Count="1" />
      <LineId Id="130" Count="0" />
      <LineId Id="145" Count="3" />
      <LineId Id="131" Count="0" />
      <LineId Id="93" Count="2" />
      <LineId Id="91" Count="0" />
      <LineId Id="128" Count="0" />
      <LineId Id="60" Count="0" />
      <LineId Id="161" Count="1" />
      <LineId Id="5" Count="0" />
      <LineId Id="179" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>