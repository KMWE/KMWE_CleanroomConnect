<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="EM_Utilities" Id="{d3bdaf93-23e0-447c-addf-e1fdaa10e5f0}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK EM_Utilities EXTENDS EM_Base IMPLEMENTS I_EM_Utilities
VAR
	//Control modules
	s_diSafetyOk : FB_DigInput;
	s_diPowerOk : FB_DigInput;
	s_diAirPressureOk : FB_DigInput;

	s_doBeaconLedGreen : FB_DigOutput_2;
	s_doBeaconLedYellow : FB_DigOutput_2;
	s_doBeaconLedRed : FB_DigOutput_2;
	
	//States
	s_bStaSafetyOk : BOOL := FALSE;
	s_bStsPowerOk : BOOL := FALSE;
	s_bStaAirPressureOk : BOOL := FALSE;
	
	//s_bStaError
	s_bStaWarning : BOOL;
	
	s_bExtError : BOOL;
	s_bExtWarning : BOOL;
	s_bExtRunning : BOOL;
	
	//Alarms
	s_fbAlarmHandlerSafetyNotOk : FB_AlarmHandler;
	s_fbAlarmHandlerPowerNotOk : FB_AlarmHandler;
	s_fbAlarmHandlerAirPressureNotOk : FB_AlarmHandler;
	
	s_bErrSafetyNotOk : BOOL;
	s_bErrPowerOk : BOOL;
	s_bErrAirPressureNotOk : BOOL;
	
	//Hmi
	s_fbHmiLedSafetyOk : FB_HmiLed;
	s_fbHmiLedPowerOk : FB_HmiLed;
	s_fbHmiLedAirPressureOk : FB_HmiLed;
	s_fbHmiLedBeaconGreen : FB_HmiLed;
	s_fbHmiLedBeaconYellow : FB_HmiLed;
	s_fbHmiLedBeaconRed : FB_HmiLed;
END_VAR

VAR_OUTPUT
	q_bStaWarning : BOOL;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[
SUPER^();
]]></ST>
    </Implementation>
    <Method Name="_m_Alarms" Id="{91068a31-fcc6-4281-af61-d7a6e7120f8c}">
      <Declaration><![CDATA[METHOD PROTECTED _m_Alarms : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
IF NOT SUPER^._m_Alarms() THEN
	RETURN;
END_IF

//Set error bits
s_bErrSafetyNotOk S= NOT(s_bStaSafetyOk);
s_bErrPowerOk S= NOT(s_bStsPowerOk);
s_bErrAirPressureNotOk S= NOT(s_bStaAirPressureOk);

// Alarm Handlers
s_fbAlarmHandlerSafetyNotOk(
	i_bStaActive := s_bErrSafetyNotOk,
	i_eAlarmLevel := E_AlarmLevel.Alarm, 
	i_sAlarmText := CONCAT(i_sEmName, ' - Safety not OK'));
	
s_fbAlarmHandlerPowerNotOk(
	i_bStaActive := s_bErrPowerOk, 
	i_eAlarmLevel := E_AlarmLevel.Alarm, 
	i_sAlarmText := CONCAT(i_sEmName, ' - Power supply not OK'));
	
s_fbAlarmHandlerAirPressureNotOk(
	i_bStaActive := s_bErrAirPressureNotOk, 
	i_eAlarmLevel := E_AlarmLevel.Alarm, 
	i_sAlarmText := CONCAT(i_sEmName, ' - Air pressure not OK'));
	
// Reset Errors
s_bErrSafetyNotOk R= i_bCmdReset AND s_bStaSafetyOk;
s_bErrPowerOk R= i_bCmdReset AND s_bStsPowerOk;
s_bErrAirPressureNotOk R= i_bCmdReset AND s_bStaAirPressureOk;

s_bStaError := 
	s_fbAlarmHandlerSafetyNotOk.q_bStaActive
	OR s_fbAlarmHandlerPowerNotOk.q_bStaActive
	OR s_fbAlarmHandlerAirPressureNotOk.q_bStaActive;	
	
s_bStaWarning := FALSE;	
	
_m_Alarms := TRUE;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="_m_Devices" Id="{97b8a94d-21c8-46ff-ac2c-0f330eabe3be}">
      <Declaration><![CDATA[METHOD PROTECTED _m_Devices : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
IF NOT SUPER^._m_Devices() THEN
	RETURN;
END_IF

//Control module
s_diSafetyOk();
s_diPowerOk();
s_diAirPressureOk();

s_doBeaconLedGreen.i_bStaOutput := s_bExtRunning;
s_doBeaconLedYellow.i_bStaOutput := s_bExtWarning;
s_doBeaconLedRed.i_bStaOutput := s_bExtError;

s_doBeaconLedGreen(i_eCtrlMode := i_eCtrlMode);
s_doBeaconLedYellow(i_eCtrlMode := i_eCtrlMode);
s_doBeaconLedRed(i_eCtrlMode := i_eCtrlMode);
	
_m_Devices := TRUE;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="_m_Hmi" Id="{97417a1d-1af2-4f07-b43b-e4325d410b41}">
      <Declaration><![CDATA[METHOD PROTECTED _m_Hmi : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
IF NOT SUPER^._m_Hmi() THEN
	RETURN;
END_IF

//Hmi Leds
s_fbHmiLedSafetyOk(i_bStaLed := s_bStaSafetyOk);
s_fbHmiLedPowerOk(i_bStaLed := s_bStsPowerOk);
s_fbHmiLedAirPressureOk(i_bStaLed := s_bStaAirPressureOk);
s_fbHmiLedBeaconGreen(i_bStaLed := s_bExtRunning);
s_fbHmiLedBeaconYellow(i_bStaLed := s_bExtWarning);
s_fbHmiLedBeaconRed(i_bStaLed := s_bExtError);

_m_Hmi := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="_m_Init" Id="{7f1871a0-83c4-4557-ac15-5a15f84be50f}">
      <Declaration><![CDATA[METHOD PROTECTED _m_Init : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
IF NOT SUPER^._m_Init() THEN
	RETURN;
END_IF

//Control Modules
s_diSafetyOk.i_stSettings.tmInputDelay := T#1S;
s_diPowerOk.i_stSettings.tmInputDelay := T#1S;
s_diAirPressureOk.i_stSettings.tmInputDelay := T#1S;

s_doBeaconLedGreen.i_stSettings.bCfgDelay := FALSE;
s_doBeaconLedGreen.i_stSettings.tmOutputDelay := T#0S;
s_doBeaconLedYellow.i_stSettings.bCfgDelay := FALSE;
s_doBeaconLedYellow.i_stSettings.tmOutputDelay := T#0S;
s_doBeaconLedRed.i_stSettings.bCfgDelay := FALSE;
s_doBeaconLedRed.i_stSettings.tmOutputDelay := T#0S;

//---------------------------------//	
	
//----------------------------------//	
//Hmi 
s_fbHmiLedSafetyOk.p_bStaVisible := FALSE;
s_fbHmiLedSafetyOk.p_sToHmiDescriptionLed := 'Safety Ok';

s_fbHmiLedPowerOk.p_bStaVisible := FALSE;
s_fbHmiLedPowerOk.p_sToHmiDescriptionLed := 'Power Ok';

s_fbHmiLedAirPressureOk.p_bStaVisible := FALSE;
s_fbHmiLedAirPressureOk.p_sToHmiDescriptionLed := 'Air pressure Ok';

s_fbHmiLedBeaconGreen.p_bStaVisible := FALSE;
s_fbHmiLedBeaconGreen.p_sToHmiDescriptionLed := 'Beacon green led';

s_fbHmiLedBeaconYellow.p_bStaVisible := FALSE;
s_fbHmiLedBeaconYellow.p_sToHmiDescriptionLed := 'Beacon yellow led';

s_fbHmiLedBeaconRed.p_bStaVisible := FALSE;
s_fbHmiLedBeaconRed.p_sToHmiDescriptionLed := 'Beacon red led';
	
_m_Init := TRUE;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="_m_Inputs" Id="{458358e5-23ba-4231-abac-3325a6a209a2}">
      <Declaration><![CDATA[METHOD PROTECTED _m_Inputs : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
IF NOT SUPER^._m_Inputs() THEN
	RETURN;
END_IF

s_bStaSafetyOk := s_diSafetyOk.p_bStaInputDelayed AND s_diSafetyOk.p_bStaInput; //on-delay only
s_bStsPowerOk := s_diPowerOk.p_bStaInputDelayed AND s_diPowerOk.p_bStaInput; //on-delay only
s_bStaAirPressureOk := s_diAirPressureOk.p_bStaInputDelayed AND s_diAirPressureOk.p_bStaInput; //on-delay only

_m_Inputs := TRUE;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="_m_Outputs" Id="{535a3bcf-7515-4ea2-9150-50d7560b683c}">
      <Declaration><![CDATA[METHOD PROTECTED _m_Outputs : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
IF NOT SUPER^._m_Outputs() THEN
	RETURN;
END_IF

s_doBeaconLedGreen.i_bStaOutput := s_bExtRunning;
s_doBeaconLedYellow.i_bStaOutput := s_bExtWarning;
s_doBeaconLedRed.i_bStaOutput := s_bExtError;

q_bStaWarning := s_bStaWarning;

_m_Outputs := TRUE;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="m_GetGeneralState" Id="{c779e9cb-e8a4-4825-ad08-77e95827b039}">
      <Declaration><![CDATA[METHOD PUBLIC m_GetGeneralState : BOOL
VAR_INPUT
	i_bError : BOOL;
	i_bWarning : BOOL;
	i_bRunning : BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
s_bExtError := i_bError;
s_bExtWarning := i_bWarning;
s_bExtRunning := i_bRunning;
]]></ST>
      </Implementation>
    </Method>
    <Property Name="p_bStaAirPressureOk" Id="{0af5c43c-8953-4fa1-af7f-5b3f4e44e13a}">
      <Declaration><![CDATA[PROPERTY PUBLIC p_bStaAirPressureOk : BOOL]]></Declaration>
      <Get Name="Get" Id="{4dede668-7bed-49aa-adc6-f4d7ad59be53}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[
p_bStaAirPressureOk := s_bStaAirPressureOk;
]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="p_bStaSafetyOk" Id="{7ea03187-b7ec-46c2-a694-807e2d1d70bb}">
      <Declaration><![CDATA[PROPERTY PUBLIC p_bStaSafetyOk : BOOL]]></Declaration>
      <Get Name="Get" Id="{7f5e3440-eaae-47cd-8f92-6961cd1007ef}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[
p_bStaSafetyOk := s_bStaSafetyOk;
]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="p_bStsPowerOk" Id="{4313e908-4780-46b5-aee4-16ddce14fbff}">
      <Declaration><![CDATA[PROPERTY PUBLIC p_bStsPowerOk : BOOL]]></Declaration>
      <Get Name="Get" Id="{b2a078c1-b0bd-4ba8-8232-d29d32a14d28}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[
p_bStsPowerOk := s_bStsPowerOk;
]]></ST>
        </Implementation>
      </Get>
    </Property>
    <LineIds Name="EM_Utilities">
      <LineId Id="48" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="207" Count="0" />
    </LineIds>
    <LineIds Name="EM_Utilities._m_Alarms">
      <LineId Id="12" Count="0" />
      <LineId Id="8" Count="1" />
      <LineId Id="7" Count="0" />
      <LineId Id="81" Count="1" />
      <LineId Id="84" Count="1" />
      <LineId Id="83" Count="0" />
      <LineId Id="34" Count="0" />
      <LineId Id="45" Count="4" />
      <LineId Id="65" Count="0" />
      <LineId Id="67" Count="2" />
      <LineId Id="66" Count="0" />
      <LineId Id="70" Count="0" />
      <LineId Id="72" Count="2" />
      <LineId Id="71" Count="0" />
      <LineId Id="50" Count="0" />
      <LineId Id="56" Count="0" />
      <LineId Id="58" Count="1" />
      <LineId Id="77" Count="0" />
      <LineId Id="61" Count="1" />
      <LineId Id="44" Count="0" />
      <LineId Id="75" Count="1" />
      <LineId Id="32" Count="0" />
      <LineId Id="78" Count="1" />
      <LineId Id="10" Count="0" />
      <LineId Id="14" Count="0" />
    </LineIds>
    <LineIds Name="EM_Utilities._m_Devices">
      <LineId Id="255" Count="0" />
      <LineId Id="234" Count="11" />
      <LineId Id="249" Count="5" />
      <LineId Id="50" Count="0" />
    </LineIds>
    <LineIds Name="EM_Utilities._m_Hmi">
      <LineId Id="222" Count="0" />
      <LineId Id="7" Count="2" />
      <LineId Id="248" Count="0" />
      <LineId Id="239" Count="0" />
      <LineId Id="256" Count="4" />
      <LineId Id="253" Count="0" />
      <LineId Id="210" Count="0" />
      <LineId Id="6" Count="0" />
    </LineIds>
    <LineIds Name="EM_Utilities._m_Init">
      <LineId Id="203" Count="0" />
      <LineId Id="5" Count="3" />
      <LineId Id="10" Count="0" />
      <LineId Id="326" Count="1" />
      <LineId Id="329" Count="0" />
      <LineId Id="364" Count="2" />
      <LineId Id="368" Count="0" />
      <LineId Id="367" Count="0" />
      <LineId Id="370" Count="0" />
      <LineId Id="369" Count="0" />
      <LineId Id="362" Count="0" />
      <LineId Id="35" Count="3" />
      <LineId Id="354" Count="0" />
      <LineId Id="344" Count="1" />
      <LineId Id="355" Count="0" />
      <LineId Id="346" Count="1" />
      <LineId Id="356" Count="0" />
      <LineId Id="348" Count="1" />
      <LineId Id="357" Count="0" />
      <LineId Id="350" Count="1" />
      <LineId Id="358" Count="0" />
      <LineId Id="352" Count="1" />
      <LineId Id="359" Count="0" />
      <LineId Id="338" Count="0" />
      <LineId Id="318" Count="0" />
      <LineId Id="4" Count="0" />
      <LineId Id="360" Count="0" />
    </LineIds>
    <LineIds Name="EM_Utilities._m_Inputs">
      <LineId Id="46" Count="0" />
      <LineId Id="6" Count="2" />
      <LineId Id="56" Count="0" />
      <LineId Id="77" Count="0" />
      <LineId Id="79" Count="1" />
      <LineId Id="83" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="81" Count="0" />
    </LineIds>
    <LineIds Name="EM_Utilities._m_Outputs">
      <LineId Id="20" Count="0" />
      <LineId Id="6" Count="2" />
      <LineId Id="42" Count="0" />
      <LineId Id="34" Count="2" />
      <LineId Id="38" Count="0" />
      <LineId Id="47" Count="0" />
      <LineId Id="22" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="23" Count="0" />
    </LineIds>
    <LineIds Name="EM_Utilities.m_GetGeneralState">
      <LineId Id="9" Count="1" />
      <LineId Id="15" Count="1" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="EM_Utilities.p_bStaAirPressureOk.Get">
      <LineId Id="5" Count="0" />
      <LineId Id="2" Count="0" />
      <LineId Id="6" Count="0" />
    </LineIds>
    <LineIds Name="EM_Utilities.p_bStaSafetyOk.Get">
      <LineId Id="5" Count="1" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="EM_Utilities.p_bStsPowerOk.Get">
      <LineId Id="5" Count="1" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>